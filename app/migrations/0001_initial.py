# Generated by Django 5.0.6 on 2024-07-30 06:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('table_name', models.CharField(db_column='TableName', max_length=100)),
                ('user_name', models.CharField(db_column='UserName', max_length=100)),
                ('action', models.CharField(db_column='Action', max_length=100)),
                ('ip_address', models.CharField(db_column='IPAddress', max_length=100)),
                ('data', models.CharField(db_column='Data', max_length=100)),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_activity_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chain',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('description', models.TextField(db_column='Description')),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_chain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChainStore',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('store_id', models.IntegerField(db_column='StoreId')),
                ('chain_id', models.IntegerField(db_column='ChainId')),
            ],
            options={
                'db_table': 'tbl_chain_store',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('state_id', models.IntegerField(db_column='StateId')),
                ('city', models.CharField(db_column='City', max_length=100)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientAddress',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('uid', models.IntegerField(db_column='UID')),
                ('address1', models.CharField(db_column='Address1', max_length=100)),
                ('address2', models.CharField(db_column='Address2', max_length=100)),
                ('street', models.CharField(db_column='Street', max_length=100)),
                ('landmark', models.CharField(db_column='Landmark', max_length=100)),
                ('city', models.IntegerField(db_column='City')),
                ('state', models.IntegerField(db_column='State')),
                ('country', models.CharField(db_column='Country', max_length=45)),
                ('pin_code', models.IntegerField(db_column='PinCode')),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=45, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=45, null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_client_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('about', models.TextField(blank=True, db_column='About', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('business_type', models.CharField(blank=True, db_column='BussinessType', max_length=200, null=True)),
                ('work_type', models.CharField(blank=True, db_column='WorkType', max_length=200, null=True)),
                ('job_type', models.CharField(blank=True, db_column='JobType', max_length=200, null=True)),
                ('job_category', models.CharField(blank=True, db_column='JobCategory', max_length=200, null=True)),
                ('job_managed_by', models.CharField(blank=True, db_column='JobManagedBy', max_length=200, null=True)),
                ('revenue_managed_by', models.CharField(blank=True, db_column='RevenueManagedBY', max_length=200, null=True)),
                ('ms_type', models.CharField(blank=True, db_column='MSType', max_length=200, null=True)),
                ('department_id', models.IntegerField(blank=True, db_column='DepartmentId', null=True)),
                ('organization_id', models.IntegerField(blank=True, db_column='OrganizationId', null=True)),
                ('manager_id', models.IntegerField(blank=True, db_column='ManaerId', null=True)),
                ('uid', models.IntegerField(blank=True, db_column='UID', null=True)),
                ('job_date', models.DateField(blank=True, db_column='JobDate', null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(blank=True, db_column='RegDate', null=True)),
            ],
            options={
                'db_table': 'tbl_job',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JobFrequency',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('job_id', models.IntegerField(db_column='JobId')),
                ('f_date', models.DateField(db_column='FDate')),
                ('f_time', models.TimeField(db_column='Ftime')),
                ('note', models.TextField(blank=True, db_column='Note', null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='Regdate')),
            ],
            options={
                'db_table': 'tbl_job_frequency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pincode',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('code', models.PositiveSmallIntegerField(db_column='Code')),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_pincode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('description', models.TextField(db_column='Description')),
                ('price', models.CharField(db_column='Price', max_length=10)),
                ('uid', models.IntegerField(db_column='UID')),
                ('view_order', models.IntegerField(blank=True, db_column='ViewOrder', null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductMedia',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('product_id', models.IntegerField(db_column='ProductId')),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('media_path', models.CharField(db_column='MediaPath', max_length=200)),
                ('media_type', models.CharField(db_column='MediaType', max_length=100)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_product_media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(db_column='GroupId')),
                ('question', models.CharField(db_column='Question', max_length=100)),
                ('q_type', models.CharField(db_column='QType', max_length=45)),
                ('uid', models.IntegerField(db_column='UID')),
                ('view_order', models.IntegerField(blank=True, db_column='ViewOrder', null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionGroup',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('group', models.CharField(db_column='Group', max_length=100)),
                ('about', models.TextField(db_column='About')),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_question_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('role', models.CharField(db_column='Role', max_length=45)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('owner_name', models.CharField(db_column='OwnerName', max_length=100)),
                ('email', models.EmailField(db_column='Email', max_length=100)),
                ('mobile', models.CharField(db_column='Mobile', max_length=10)),
                ('chain_id', models.IntegerField(db_column='ChainId')),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(db_column='RegDate')),
            ],
            options={
                'db_table': 'tbl_store',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoreAddress',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('store_id', models.IntegerField(blank=True, db_column='StoreId', null=True)),
                ('address1', models.CharField(blank=True, db_column='Address1', max_length=100, null=True)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=100, null=True)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=100, null=True)),
                ('landmark', models.CharField(blank=True, db_column='Landmark', max_length=100, null=True)),
                ('city', models.IntegerField(blank=True, db_column='City', null=True)),
                ('state', models.IntegerField(blank=True, db_column='State', null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=45, null=True)),
                ('pincode', models.IntegerField(blank=True, db_column='Pincode', null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=45, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=45, null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(blank=True, db_column='RegDate', null=True)),
            ],
            options={
                'db_table': 'tbl_store_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoreMedia',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('store_id', models.IntegerField(blank=True, db_column='StoreId', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('media_path', models.CharField(blank=True, db_column='MediaPath', max_length=200, null=True)),
                ('media_type', models.CharField(blank=True, db_column='MediaType', max_length=45, null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(blank=True, db_column='RegDate', null=True)),
            ],
            options={
                'db_table': 'tbl_store_media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoreProduct',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('store_id', models.IntegerField(blank=True, db_column='StoreId', null=True)),
                ('product_id', models.IntegerField(blank=True, db_column='ProductId', null=True)),
            ],
            options={
                'db_table': 'tbl_store_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('uid', models.IntegerField(blank=True, db_column='UID', null=True)),
                ('store_id', models.IntegerField(blank=True, db_column='StoreId', null=True)),
                ('job_id', models.IntegerField(blank=True, db_column='JobId', null=True)),
                ('about', models.TextField(blank=True, db_column='About', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('priority', models.CharField(blank=True, db_column='Priority', max_length=50, null=True)),
                ('is_done', models.CharField(blank=True, db_column='IsDone', max_length=50, null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(blank=True, db_column='RegDate', null=True)),
            ],
            options={
                'db_table': 'tbl_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskInfo',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('tid', models.IntegerField(blank=True, db_column='TID', null=True)),
                ('qid', models.IntegerField(blank=True, db_column='QID', null=True)),
                ('answer', models.CharField(blank=True, db_column='Answer', max_length=100, null=True)),
                ('status', models.BooleanField(blank=True, db_column='Status', null=True)),
                ('reg_date', models.DateTimeField(blank=True, db_column='RegDate', null=True)),
            ],
            options={
                'db_table': 'tbl_task_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, db_column='FirstName', max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, db_column='LastName', max_length=100, null=True)),
                ('email', models.EmailField(blank=True, db_column='Email', max_length=100, null=True)),
                ('mobile', models.CharField(blank=True, db_column='Mobile', max_length=10, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=100, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=200, null=True)),
                ('photo', models.CharField(blank=True, db_column='Photo', max_length=200, null=True)),
                ('role_id', models.IntegerField(blank=True, db_column='RoleId', null=True)),
                ('uid', models.IntegerField(blank=True, db_column='UID', null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(blank=True, db_column='RegDate', null=True)),
            ],
            options={
                'db_table': 'tbl_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserClient',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('full_name', models.CharField(blank=True, db_column='FullName', max_length=100, null=True)),
                ('trade_name', models.CharField(blank=True, db_column='TradeName', max_length=100, null=True)),
                ('gst', models.CharField(blank=True, db_column='GST', max_length=20, null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=20, null=True)),
                ('role', models.CharField(blank=True, db_column='Role', max_length=45, null=True)),
                ('type', models.CharField(blank=True, db_column='Type', max_length=45, null=True)),
                ('email', models.EmailField(blank=True, db_column='Email', max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, db_column='Mobile', max_length=10, null=True)),
                ('pan', models.CharField(blank=True, db_column='PAN', max_length=45, null=True)),
                ('cin', models.CharField(blank=True, db_column='CIN', max_length=45, null=True)),
                ('inc_date', models.DateField(blank=True, db_column='INCDate', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('logo', models.CharField(blank=True, db_column='Logo', max_length=200, null=True)),
                ('uid', models.IntegerField(blank=True, db_column='UID', null=True)),
                ('status', models.BooleanField(db_column='Status')),
                ('reg_date', models.DateTimeField(blank=True, db_column='RegDate', null=True)),
            ],
            options={
                'db_table': 'tbl_user_client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserEmployee',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('uid', models.IntegerField(blank=True, db_column='UID', null=True)),
                ('designation', models.CharField(blank=True, db_column='Designation', max_length=100, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=10, null=True)),
                ('dob', models.DateField(blank=True, db_column='DOB', null=True)),
                ('doj', models.DateField(blank=True, db_column='DOJ', null=True)),
                ('adhaar_number', models.CharField(blank=True, db_column='AdhaarNumber', max_length=45, null=True)),
                ('pin_code', models.CharField(blank=True, db_column='PinCode', max_length=6, null=True)),
            ],
            options={
                'db_table': 'tbl_user_employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.IntegerField(db_column='role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
